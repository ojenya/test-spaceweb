{"version":3,"sources":["logo.svg","components/Card.jsx","components/Footer.jsx","components/Main.jsx","components/Support.jsx","components/VPS.jsx","components/Domains.jsx","components/ContentHeader.jsx","components/Account.jsx","components/Maintance.jsx","pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","class","id","userID","title","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","points","body","Footer","className","href","Main","list","to","fill-rule","d","activeStyle","fontWeight","color","ContentHeader","path","Support","map","el","i","key","VPS","Domains","Contentheader","Account","Maintance","Home","App","useState","setList","useEffect","fetch","then","response","json","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e0b2ae0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3a15c832.svg\";","import React from 'react'\n\n\nconst Card = (props) => {\n    return (\n    \n        <>\n        <details>\n            <summary>\n                <span class=\"summary-title\">#{props.id} {props.userID} {props.title}</span>\n                <div class=\"summary-chevron-up\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>\n                </div>\n            </summary>\n\n            <div class=\"summary-content\">{props.body}</div>\n            <div class=\"summary-chevron-down\">\n\t\t        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-up\"><polyline points=\"18 15 12 9 6 15\"></polyline></svg>\n            </div>\n\t\t</details>\n\n        <hr class=\"rounded\"></hr>\n        </>\n    )\n}\n\n\n\nexport default Card\n","import React from 'react'\n\n\nconst Footer = (props) => {\n    return (\n    <>\n    <footer className=\"footer\">\n        <ul className=\"copyright\">\n            <li>© 2001-2018 <a href=\"#\">ООО «Спейсвеб»</a></li>\n            <li>Все права защищены.</li>\n            <li>Лицензия <a href=\"#\">N°163230</a></li>\n        </ul>\n\n        <ul className=\"contact\">\n            <li><a href=\"tel:+78123341222\">+7 (812) 334-12-22</a> (в Санкт-Петербурге)</li>\n            <li><a href=\"tel:+74956631612\">+7 (495) 663-16-12</a> (в Москве)</li>\n            <li><a href=\"tel:+780010011615\">+7 (800) 100-16-15</a> (бесплатно по России)</li>\n        </ul>\n    </footer>\n    </>\n    )\n}\n\n\n\nexport default Footer\n","import React from 'react'\nimport logo from '../logo.svg';\nimport {\n    Support,\n    Account,\n    VPS,\n    Domains,\n    ContentHeader,\n    Maintance} from './'\n\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    NavLink\n  } from \"react-router-dom\";\n\nconst Main = (props) => {\n    const list = props.list\n    return (\n        <>\n        <Router>\n            <main className=\"main\">\n                <nav className=\"nav\">\n                    <div className=\"logo\">\n                        <Link to=\"/test-spaceweb/\">\n                            {/* <img className=\"logo-svg\" src={logo} alt=\"Логотип\" width=\"100%\"/> */}\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"58\" viewBox=\"0 0 314 58\">\n                                <g fill=\"none\" fill-rule=\"evenodd\">\n                                    <path className=\"icon\" fill=\"#FFF\" d=\"M116.082 30.971c-.627-.628-1.397-1.214-2.313-1.745-.92-.529-1.945-1.12-3.084-1.77a38.014 38.014 0 0 0-1.989-1.099 21.805 21.805 0 0 1-1.983-1.159 6.863 6.863 0 0 1-1.523-1.378c-.41-.512-.614-1.11-.614-1.805 0-1.426.415-2.456 1.253-3.087.836-.632 1.989-.947 3.453-.947 1.06 0 2.093.302 3.093.888.996.593 1.846 1.254 2.534 1.986l2.57-3.123c-.817-.933-1.924-1.82-3.337-2.657-1.403-.84-3.084-1.254-5.041-1.254-2.85 0-5.087.733-6.697 2.197-1.615 1.468-2.42 3.463-2.42 5.993 0 1.222.188 2.257.552 3.118.367.855.874 1.62 1.528 2.297.65.667 1.439 1.29 2.353 1.864.912.57 1.924 1.175 3.016 1.831.854.531 1.658.996 2.416 1.408.754.403 1.39.803 1.923 1.187.531.39.942.835 1.254 1.317.303.494.458 1.08.458 1.771 0 1.672-.451 2.782-1.347 3.333-.897.55-2.162.825-3.793.825-1.061 0-2.203-.265-3.422-.795-1.224-.53-2.385-1.544-3.481-3.053l-2.817 3.053c1.18 1.546 2.55 2.745 4.098 3.58 1.55.834 3.402 1.254 5.566 1.254 2.812 0 5.13-.704 6.966-2.11 1.838-1.405 2.756-3.615 2.756-6.628 0-1.222-.163-2.25-.485-3.086a6.459 6.459 0 0 0-1.443-2.206M141.311 34.978c0 1.953-.538 3.408-1.59 4.365-1.061.959-2.532 1.435-4.404 1.435-1.876 0-3.404-.611-4.583-1.835-1.183-1.212-1.777-2.808-1.777-4.759v-9.66c0-1.878.594-3.426 1.777-4.65 1.179-1.22 2.69-1.831 4.52-1.831 1.917 0 3.406.476 4.467 1.436 1.052.959 1.59 2.397 1.59 4.31v11.189zm-4.764-21.157c-1.668 0-3.206.395-4.613 1.19a8.78 8.78 0 0 0-3.327 3.333l-.429-3.915h-3.855V57.85h4.709V41.329c.77 1.345 1.821 2.292 3.146 2.843 1.324.556 2.74.829 4.246.829 3.141 0 5.513-.864 7.124-2.599 1.61-1.73 2.415-4.207 2.415-7.424V23.664c0-3.301-.769-5.768-2.294-7.401-1.531-1.63-3.899-2.442-7.122-2.442zM167.181 34.91c0 .853-.15 1.645-.455 2.354a5.733 5.733 0 0 1-1.286 1.862 6.176 6.176 0 0 1-1.893 1.254 5.713 5.713 0 0 1-2.285.455c-1.385 0-2.537-.285-3.427-.852-.892-.567-1.34-1.544-1.34-2.93V32.1l10.686-2.263v5.073zm-4.533-21.089c-.776 0-1.62.11-2.565.331-.93.228-1.854.52-2.777.86-.913.351-1.789.734-2.627 1.168-.838.42-1.538.843-2.107 1.255l1.713 3.601a21.39 21.39 0 0 1 1.774-1.039 20.492 20.492 0 0 1 2.17-1.005 16.412 16.412 0 0 1 2.192-.73c.71-.19 1.34-.28 1.867-.28 1.866 0 3.154.362 3.877 1.102.708.728 1.066 2.056 1.066 3.97v3.184l-15.392 3.238v7.701c0 2.606.754 4.553 2.266 5.836 1.503 1.284 3.565 1.928 6.165 1.928 1.668 0 3.123-.439 4.357-1.32a10.363 10.363 0 0 0 3.02-3.264l.307 4.033h3.8V23.053c0-3.18-.723-5.513-2.17-7.002-1.45-1.487-3.757-2.23-6.936-2.23zM184.642 19.694c.996-1.061 2.352-1.587 4.063-1.587 1.187 0 2.293.315 3.335.942a9.123 9.123 0 0 1 2.657 2.476l3.121-3.054c-2.283-3.098-5.318-4.65-9.113-4.65-1.507 0-2.88.247-4.125.734-1.243.49-2.312 1.179-3.205 2.078a9.21 9.21 0 0 0-2.082 3.18c-.49 1.219-.738 2.569-.738 4.032v11.25c0 3.144.925 5.578 2.783 7.307 1.853 1.735 4.354 2.6 7.492 2.6 1.627 0 3.21-.306 4.734-.92 1.531-.614 2.87-1.568 4.005-2.875l-2.872-3.118a6.215 6.215 0 0 1-2.6 1.986 8.152 8.152 0 0 1-3.143.646c-1.834 0-3.262-.483-4.282-1.433-1.022-.96-1.529-2.357-1.529-4.192v-11.25c0-1.708.502-3.091 1.5-4.152M207.051 23.847c0-1.75.58-3.148 1.737-4.182 1.17-1.039 2.604-1.558 4.317-1.558 1.673 0 2.905.422 3.695 1.277.798.858 1.32 2.098 1.558 3.733l.13 2.627-11.437 2.081v-3.978zm10.481 16.257a9.575 9.575 0 0 1-3.448.617c-2.075 0-3.77-.565-5.077-1.682-1.302-1.12-1.956-2.72-1.956-4.8v-3l16.02-2.87v-4.524c0-1.504-.243-2.887-.735-4.129-.49-1.239-1.169-2.3-2.049-3.176a8.98 8.98 0 0 0-3.147-2.018c-1.226-.464-2.565-.7-4.035-.7-1.55 0-2.972.236-4.286.7-1.295.47-2.419 1.128-3.365 1.988-.933.856-1.665 1.901-2.198 3.148-.53 1.244-.793 2.64-.793 4.187v10.4c0 3.544 1.02 6.224 3.055 8.04 2.045 1.81 4.834 2.716 8.38 2.716 1.878 0 3.597-.295 5.166-.884 1.57-.596 3.046-1.603 4.436-3.032l-2.567-3.236c-1.18 1.094-2.316 1.848-3.4 2.255zM250.827 38.523l-5.02-24.094h-4.584l-4.891 24.214-4.462-24.214h-4.768l6.785 30.025h4.89l4.83-22.685 4.837 22.685h4.766l6.727-30.025h-4.713zM268.324 23.847c0-1.75.576-3.148 1.737-4.182 1.167-1.039 2.604-1.558 4.315-1.558 1.668 0 2.9.422 3.693 1.277.795.858 1.318 2.098 1.557 3.733l.126 2.627-11.428 2.081v-3.978zm10.483 16.257a9.61 9.61 0 0 1-3.453.617c-2.08 0-3.772-.565-5.081-1.682-1.3-1.12-1.95-2.72-1.95-4.8v-3l16.017-2.87v-4.524c0-1.504-.247-2.887-.733-4.129-.485-1.239-1.174-2.3-2.053-3.176a8.99 8.99 0 0 0-3.145-2.018c-1.222-.464-2.566-.7-4.033-.7-1.551 0-2.977.236-4.281.7-1.303.47-2.427 1.128-3.361 1.988a8.868 8.868 0 0 0-2.205 3.148c-.533 1.244-.797 2.64-.797 4.187v10.4c0 3.544 1.023 6.224 3.06 8.04 2.039 1.81 4.833 2.716 8.377 2.716 1.873 0 3.599-.295 5.168-.884 1.568-.596 3.05-1.603 4.429-3.032l-2.567-3.236c-1.183 1.094-2.31 1.848-3.392 2.255zM308.72 35.156c0 1.833-.546 3.224-1.646 4.155-1.1.938-2.56 1.41-4.4 1.41-1.99 0-3.558-.638-4.695-1.896-1.142-1.264-1.714-2.893-1.714-4.89v-8.928c0-.89.16-1.758.46-2.591a6.7 6.7 0 0 1 1.307-2.203 6.367 6.367 0 0 1 2.024-1.496c.77-.373 1.6-.551 2.5-.551 1.957 0 3.47.46 4.546 1.376 1.081.914 1.618 2.354 1.618 4.305v11.309zm2.24-18.8c-1.608-1.693-3.999-2.535-7.178-2.535a8.63 8.63 0 0 0-4.28 1.099 9.705 9.705 0 0 0-3.237 2.939V.356h-4.713V44.39h4.163l.247-3.556c.858 1.519 1.941 2.583 3.27 3.218 1.32.632 2.816.949 4.49.949 3.131 0 5.526-.845 7.177-2.54 1.643-1.694 2.468-4.123 2.468-7.301V23.664c0-3.184-.796-5.614-2.408-7.307z\"/>\n                                    <path fill=\"#36BDF7\" d=\"M41.312 44.04c-.987 0-1.78.799-1.78 1.778a1.779 1.779 0 1 0 3.556 0 1.78 1.78 0 0 0-1.776-1.779\"/>\n                                    <path fill=\"#36BDF7\" d=\"M49.848 39.385a6.707 6.707 0 0 1-6.704-6.713 6.694 6.694 0 0 1 6.704-6.701 6.697 6.697 0 0 1 6.706 6.7 6.71 6.71 0 0 1-6.706 6.714m-17.03 0a6.71 6.71 0 0 1-6.712-6.713 6.698 6.698 0 0 1 6.711-6.701 6.693 6.693 0 0 1 6.701 6.7c0 3.708-2.997 6.714-6.7 6.714m45.217-21.278c-1.898-3.001-4.012-5.09-5.949-6.791-1.52-1.324-2.936-2.414-4.327-3.453-.652-.487-1.554-.487-2.136.08a850.09 850.09 0 0 1-2.33 2.255 454.012 454.012 0 0 1-4.475 4.303 1761.814 1761.814 0 0 1-4.84 4.568c-.602.569-1.466.729-2.28.582a12.43 12.43 0 0 0-2.294-.208c-2.608 0-5.025.785-7.039 2.134a1.933 1.933 0 0 1-2.147 0 12.586 12.586 0 0 0-8.913-1.99c-.828.129-1.725-.01-2.335-.592-1.69-1.588-3.336-3.137-4.769-4.494-1.786-1.695-3.232-3.1-4.476-4.303-.853-.823-1.605-1.553-2.33-2.255-.576-.567-1.482-.567-2.134-.08-1.392 1.039-2.807 2.129-4.325 3.453-1.945 1.7-4.055 3.79-5.948 6.79-1.895 2.999-3.574 6.907-4.349 10.78-.78 3.87-.655 7.714.078 11.034.732 3.324 2.066 6.137 3.59 8.806 1.517 2.673 3.228 5.195 3.456 5.063.218-.134-1.029-2.931-2.026-5.68-.992-2.741-1.724-5.441-2.062-8.06-.342-2.612-.282-5.147.403-8.06.685-2.912 2.006-6.192 3.485-8.697 1.475-2.51 3.108-4.235 4.612-5.641a49.19 49.19 0 0 1 3.214-2.737c.593-.475 1.451-.35 1.971.212l.156.173 6.056 6.577c.531.57.468 1.45-.039 2.043a13.086 13.086 0 0 0-1.308 1.855c-.373.64-1.183.9-1.824.528l-4.08-2.391c-.698-.41-1.597-.313-2.154.277a16.371 16.371 0 0 0-1.87 2.409c-.985 1.524-2.013 3.663-2.62 6.264-.6 2.605-.758 5.683-.4 8.483.36 2.805 1.252 5.35 2.291 7.699 1.044 2.356 2.248 4.52 2.467 4.52.22 0-.554-2.164-1.18-4.38-.62-2.211-1.096-4.47-1.25-6.65-.145-2.175.024-4.276.403-6.07.37-1.794.938-3.264 1.501-4.377.273-.553.55-1.027.821-1.45a1.33 1.33 0 0 1 1.921-.328l3.268 2.482c.717.546 1.151 1.374 1.363 2.243.035.148.074.293.112.433.157.599-.342 1.156-.939 1.049l-1.142-.191c-.769-.128-1.536.328-1.735 1.08-.229.84-.42 1.704-.509 2.612-.14 1.389-.03 2.913.227 4.409.261 1.497.677 2.974 1.46 4.85.79 1.882 1.956 4.17 2.184 4.242.223.074-.503-2.063-.942-3.871a22.363 22.363 0 0 1-.666-4.5c-.054-1.192.005-2.09.118-2.88.04-.293.088-.574.142-.85.152-.721.923-1.11 1.63-.9l2.876.856c.866.26 1.657.704 2.408 1.21a12.557 12.557 0 0 0 7.077 2.173c2.605 0 5.022-.791 7.035-2.141a1.926 1.926 0 0 1 2.147 0 12.592 12.592 0 0 0 7.04 2.14c2.525 0 4.868-.742 6.848-2.018.743-.485 1.532-.91 2.382-1.157l3.558-1.063c.717-.21 1.485.179 1.633.9.051.276.101.557.15.85.113.79.17 1.688.113 2.88-.055 1.197-.226 2.687-.667 4.5-.44 1.808-1.163 3.945-.942 3.87.223-.071 1.393-2.36 2.178-4.241.792-1.876 1.202-3.353 1.461-4.85.255-1.496.367-3.02.234-4.41a16.774 16.774 0 0 0-.504-2.61c-.209-.753-.973-1.21-1.746-1.081l-1.595.276c-.626.102-1.078-.535-.905-1.153.231-.887.672-1.73 1.403-2.285l3.761-2.854a1.328 1.328 0 0 1 1.92.328c.276.423.545.897.822 1.45a18.063 18.063 0 0 1 1.503 4.377 22.82 22.82 0 0 1 .403 6.07c-.147 2.18-.628 4.439-1.252 6.65-.624 2.216-1.395 4.38-1.182 4.38.217 0 1.421-2.164 2.467-4.52 1.046-2.35 1.934-4.894 2.297-7.7.358-2.8.192-5.877-.407-8.482a19.938 19.938 0 0 0-2.614-6.264 16.372 16.372 0 0 0-1.876-2.41c-.552-.59-1.453-.686-2.154-.276l-4.424 2.587c-.637.376-1.446.089-1.809-.563a12.387 12.387 0 0 0-1.258-1.84c-.476-.593-.467-1.45.048-2.008l6.251-6.788.16-.173c.52-.561 1.372-.687 1.971-.212a51.668 51.668 0 0 1 3.21 2.737c1.504 1.406 3.137 3.132 4.61 5.64 1.477 2.506 2.798 5.786 3.485 8.698.693 2.913.743 5.448.405 8.06-.338 2.619-1.07 5.319-2.062 8.06-.996 2.749-2.248 5.546-2.026 5.68.228.132 1.935-2.39 3.46-5.063 1.52-2.67 2.86-5.482 3.593-8.806.726-3.32.853-7.163.076-11.034-.775-3.873-2.452-7.781-4.349-10.78\"/>\n                                    <path fill=\"#36BDF7\" d=\"M35.767 31.188a1.782 1.782 0 1 0 1.785 1.781c0-.98-.798-1.782-1.785-1.782M52.807 31.188a1.782 1.782 0 1 0 0 3.564 1.782 1.782 0 0 0 0-3.565\"/>\n                                </g>\n                            </svg>\n                        </Link>\n                    </div>\n\n                    <ul>\n                        <NavLink to=\"/account\" \n                        activeStyle={{\n                            fontWeight: \"bold\",\n                            color: \"#F7FAFB\"\n                        }}>\n                            Аккаунт\n                        </NavLink>\n\n                        <NavLink to=\"/vps\" \n                        activeStyle={{\n                        fontWeight: \"bold\",\n                        color: \"#F7FAFB\"\n                        }}>\n                            VPS\n                        </NavLink>\n\n                        <NavLink to=\"/domains\" activeStyle={{\n                        fontWeight: \"bold\",\n                        color: \"#F7FAFB\"\n                        }}>\n                            Домены\n                        </NavLink>\n\n                        <NavLink to=\"/support\" activeStyle={{\n                        fontWeight: \"bold\",\n                        color: \"#F7FAFB\"\n                        }}>\n                            Поддержка\n                        </NavLink>\n                    </ul>\n                </nav>\n\n                <div className=\"conent\">\n                    <ContentHeader/>\n                    <Switch>\n                        <Route path=\"/account\">\n                            <Account list={list}/>\n                        </Route>\n                        <Route path=\"/vps\">\n                            <VPS list={list}/>\n                        </Route>\n                        <Route path=\"/domains\">\n                            <Domains list={list}/>\n                        </Route>\n                        <Route path=\"/support\">\n                            <Support list={list}/>\n                        </Route>\n                        <Route path=\"/test-spaceweb/\">\n                            <Maintance list={list}/>\n                        </Route>\n                        \n                    </Switch>\n                </div>\n            </main>\n        </Router>\n        </>\n    )\n}\n\n\n\nexport default Main\n","import React from 'react'\nimport Card from './Card'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    NavLink\n  } from \"react-router-dom\";\n\n\nconst Support = (props) => {\n    const{list} = props\n    return (\n        <>\n        <Router>\n        <div className=\"container-content\">\n            <div className=\"api\">\n                <div className=\"subtitle\">Поддержка</div>\n                <div className=\"title\">Поддержка</div>\n\n                {/* <div className=\"separator\"></div> */}\n                <hr class=\"rounded\"></hr>\n                <nav className=\"content-nav\">\n                    <ul>\n                        <NavLink to=\"/order\" \n                        activeStyle={{\n                            fontWeight: \"bold\",\n                            color: \"#062436\"\n                        }}>\n                            Заявка\n                        </NavLink>\n\n                        <NavLink to=\"/templates\" \n                        activeStyle={{\n                        fontWeight: \"bold\",\n                        color: \"#062436\"\n                        }}>\n                            Шаблоны\n                        </NavLink>\n\n                        <NavLink to=\"/history\" activeStyle={{\n                        fontWeight: \"bold\",\n                        color: \"#062436\"\n                        }}>\n                            История заявок\n                        </NavLink>\n                    </ul>\n                </nav>\n\n                <Switch>\n                        <Route path=\"/order\">\n\n                        </Route>\n\n                        <Route path=\"/templates\">\n\n                        </Route>\n\n                        <Route path=\"/history\">\n                        {list?list.map((el,i)=>(<Card key={i} {...el}/>)):<div className=\"fail\"></div>}\n                        </Route>\n                     \n                    </Switch>\n\n            </div>\n        </div>\n        </Router>\n        </>\n    )\n}\n\n\n\nexport default Support\n","import React from 'react'\n\n\nconst VPS = (props) => {\n    return (\n        <>\n            <div className=\"container-content\">\n                    <div className=\"api\">\n                        <div className=\"subtitle\">VPS</div>\n                        <div className=\"title\">VPS</div>\n                        <div className=\"separator\"></div>\n                    </div>\n            </div>    \n        </>\n    )\n}\n\n\n\nexport default VPS\n","import React from 'react'\n\n\nconst Domains = (props) => {\n    return (\n        <>\n        <div className=\"container-content\">\n            <div className=\"api\">\n                <div className=\"subtitle\">Домены</div>\n                <div className=\"title\">Домены</div>\n                <div className=\"separator\"></div>\n            </div>\n        </div>  \n        </>\n    )\n}\n\n\nexport default Domains\n","import React from 'react'\n\nconst Contentheader = (props) => {\n    return (\n        <>\n            <div className=\"container-header\">\n                <ul>\n                    <li><a href=\"#\">1000.00 ₽</a></li>\n                    <li><a href=\"#\">user</a></li>\n                    <li><a href=\"#\">Выйти</a></li>\n                </ul>\n            </div>  \n        </>\n    )\n}\n\n\n\nexport default Contentheader\n","import React from 'react'\n\n\nconst Account = (props) => {\n    return (\n        <>\n        <div className=\"container-content\">\n            <div className=\"api\">\n                <div className=\"subtitle\">Аккаунт</div>\n                <div className=\"title\">Аккаунт</div>\n                <div className=\"separator\"></div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Account\n","import React from 'react'\n\nconst Maintance = (props) => {\n    return (\n        <>\n         <div className=\"container-content\">\n                    <div className=\"api\">\n                        <div className=\"subtitle\">Тестовое задание</div>\n                        <div className=\"title\">SpaceWeb</div>\n                        <hr/>\n\n                        <div className=\"subtitle\">\n                            ✅Необходимо реализовать SPA (Single Page Application), которое будет\n                            показывать заголовки статей и раскрывать полный текст статьи при\n                            нажатии на заголовок.\n                            <br/><br/>                            \n                            Цель: проверить верстку по макету и знания\n                            ReactJS.\n                            <br/><br/>\n                            ❌Статьи в виде XML находится по ссылке <a href=\"https://sweb.ru/export/turbojournal/\">https://sweb.ru/export/turbojournal/</a>\n                            <br/>\n                            где заголовок содержится в тэге: <br/>\n                            <code>\n                                &lt;turbo:topic&gt;\n                                Топ-6 сервисов для проверки кроссбраузерности сайта\n                                &lt;/turbo:topic&gt;\n                                <br/>\n                            </code>\n                            а текст статьи в тэге: <br/>\n                            <code>\n                                &lt;turbo:content&gt;\n                                &lt;![CDATA[\n                                ….\n                                ]]&gt;\n                                &lt;/turbo:content&gt;\n                            </code>\n                            <br/>\n                            ✅ Статьи должны прогружаться в приложение динамически из URL, а не\n                            просто сохранены в виде локальных данных.\n                            <br/><br/>\n                            ✅За основу необходимо взять макет из прикрепленного файла\n                            «Поддержка_История.png». Это макет от другой задачи, но нам важно в\n                            принципе понять навыки верстки. Поэтому на основе этого макета вместо\n                            номера заявки будет тема статьи, а при клике подгружаться содержимое\n                            статьи. <br/> ✅Остальное нужно сверстать без изменений (надписи текстом,\n                                ❌картинки в виде иконок), как в макете. <br/><br/>\n                            ❌Шрифт Proxima Nova (как на основном сайте https://sweb.ru/ ), иконки и\n                            элементы можно взять отдельно в файле «UIKit _ Компоненты.png»\n                            <hr/>\n                            ✅ Тестовые данные <a href=\"https://jsonplaceholder.typicode.com/posts\">JSONPlaceholder</a><br/> <br/>\n                            ✅ <b>БЕСПЛАТНЫЙ</b> шрифт Montserrat\n                        </div>\n                    </div>\n            </div>    \n        </>\n    )\n}\n\n\n\nexport default Maintance\n","import React from 'react'\n\nimport {Main,Footer,Card}  from '../components'\n\nconst Home = (props) => {\n        const{list} = props\n    return (\n        <>\n        <Main list={list}/>\n        <Footer/>\n        </>\n    )\n}\n\n\n\nexport default Home\n","import React,{useState,useEffect} from 'react';\nimport './App.scss';\n\nimport {Home}  from './pages'\n\nfunction App() {\n\n  // Main\n  // --> <Nav>\n  // --> <Content>\n  // Footer\n\n  const [list,setList] = useState()\n\nuseEffect (()=>{\n  fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(response => response.json())\n  .then(json => setList(json))\n},[])\n\n\n  return (\n   <Home list={list}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}